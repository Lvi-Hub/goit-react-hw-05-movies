{"version":3,"file":"static/js/544.d1a8e591.chunk.js","mappings":"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","sources":["Service/fetchApi.jsx","pages/MovieDetails/MovieDetails.styled.js","components/BackLink/backBtn.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3';\nconst api_key = '481cbb6dba5121edc01136f73aa6b3c6';\nconst page = 1;\n//--\nexport function fetchTrending() {\n  const options = new URLSearchParams({\n    api_key,\n    page,\n  });\n  const urlTrending = `${URL}/trending/all/day?${options}`;\n  return fetch(urlTrending).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\nexport function fetchMovieDetails(moviesID) {\n  const urlMoviesDetails = `${URL}/movie/${moviesID}?api_key=${api_key}`;\n  return fetch(urlMoviesDetails).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\n\nexport function fetchCast(moviesID) {\n  const urlCast = `${URL}/movie/${moviesID}/credits?api_key=${api_key}`;\n  return fetch(urlCast).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport function fetchReviews(moviesID) {\n  const URLReviews = `${URL}/movie/${moviesID}/reviews?api_key=${api_key}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/search/movie\nexport function fetchSearch(SearchName) {\n  const URLReviews = `${URL}/search/movie?api_key=${api_key}&query=${SearchName}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 20px 30px;\n  padding-bottom: 20px;\n  gap: 30px;\n  border-bottom: 1px solid black;\n`;\nexport const Info = styled.div`\n  padding-bottom: 20px;\n`;\nexport const Img = styled.img`\n  width: 270px;\n  height: 360px;\n`;\n\nexport const AddInfo = styled.div`\n  padding-bottom: 20px;\n`;\n\nexport const ItemLink = styled(Link)`\n  padding-bottom: 20px;\n`;\n\nexport const Message = styled.div`\n  padding-top: 20px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 10px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: 1px solid #000;\n  background-color: #e3dddd;\n  border-radius: 3px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './backBtn.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"17\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { fetchMovieDetails } from 'Service/fetchApi';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  Container,\n  Img,\n  Info,\n  AddInfo,\n  ItemLink,\n  Message,\n} from './MovieDetails.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport PropTypes from 'prop-types';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [moviesDatails, setMoviesDatails] = useState([]);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  console.log(backLinkHref);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(data => {\n        // console.log(data);\n        setMoviesDatails(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  // console.log(moviesDatails);\n  const { title, poster_path, vote_average, overview, genres } = moviesDatails;\n  return (\n    <>\n      <BackLink to={backLinkHref.current}>Go Back</BackLink>\n      {!title && <Message> No datailes about this movies!!! </Message>}\n      {title && (\n        <>\n          <Container>\n            <Img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={`${title}`}\n            />\n\n            <Info>\n              <p>{title}</p>\n              <p>User score: {Math.round((vote_average * 100) / 10) || ''}%</p>\n              <p>Overview</p>\n              <p>{overview}</p>\n              <p>Genres</p>\n              <ul>\n                {genres?.map(({ id, name }) => (\n                  <li key={id}> {name}</li>\n                ))}\n              </ul>\n            </Info>\n          </Container>\n          <AddInfo>\n            <h2>Aditional information</h2>\n            <ul>\n              <li>\n                <ItemLink to=\"Cast\">Cast</ItemLink>\n              </li>\n              <li>\n                <ItemLink to=\"Reviews\">Reviews</ItemLink>\n              </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </AddInfo>\n        </>\n      )}\n    </>\n  );\n};\n\nMoviesDetails.propTypes = {\n  movieDetails: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string.isRequired,\n  }),\n\n  genres: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MoviesDetails;\n"],"names":["URL","api_key","fetchTrending","options","URLSearchParams","page","urlTrending","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieDetails","moviesID","urlMoviesDetails","fetchCast","urlCast","fetchReviews","URLReviews","fetchSearch","SearchName","Container","styled","Info","Img","AddInfo","ItemLink","Link","Message","StyledLink","BackLink","to","children","size","movieId","useParams","useState","moviesDatails","setMoviesDatails","location","useLocation","backLinkHref","useRef","state","from","console","log","useEffect","data","catch","error","message","title","poster_path","vote_average","overview","genres","current","src","alt","Math","round","map","id","name","Suspense","fallback"],"sourceRoot":""}