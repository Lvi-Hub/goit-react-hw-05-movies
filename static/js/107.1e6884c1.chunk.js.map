{"version":3,"file":"static/js/107.1e6884c1.chunk.js","mappings":"wRAEaA,EAAYC,EAAAA,GAAAA,IAAH,sEAKTC,EAAaD,EAAAA,GAAAA,KAAH,sGAYVE,GALQF,EAAAA,GAAAA,IAAH,0FAKEA,EAAAA,GAAAA,GAAH,kE,GAKMA,EAAAA,GAAAA,IAAH,iD,QCiDpBG,EAAAA,GAAAA,UAAwB,CACtBC,QAASC,IAAAA,QACPA,IAAAA,MAAgB,CACdC,GAAID,IAAAA,OAAAA,WACJE,MAAOF,IAAAA,OAAAA,WACPG,KAAMH,IAAAA,OAAAA,eAIZ,MA3Ee,WAAO,IAAD,EACbI,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAEMV,EAAI,UAAGI,EAAaO,IAAI,eAApB,QAA+B,IAczCC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAYK,GACTa,MAAK,SAAAC,GACJJ,EAAeI,EAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACnB,IAEJ,IAAQJ,EAAYa,EAAZb,QAER,OADAqB,QAAQC,IAAItB,IAEV,UAACL,EAAD,YACE,0BACE,UAACE,EAAD,CAAY2B,SAzBG,SAAAC,GACnBA,EAAEC,iBACiB,KAAff,GACFF,EAAgBE,EAEnB,EAoBK,WACE,kBACEgB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAU,SAAAN,GAAC,OAxBK,SAAArB,GAExBQ,EAD4B,KAATR,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,CAqBwB4B,CAAkBP,EAAEQ,OAAOC,MAA/B,KAEb,oBAAQP,KAAK,SAAb,WACE,SAAC,MAAD,KACA,0BAAM,oBAIZ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,yBACGpC,IACC,SAACF,EAAD,UACGE,EAAQqC,KAAI,gBAAGnC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACX,yBACE,SAAC,KAAD,CAAMkC,GAAE,kBAAapC,GAAMqC,MAAO,CAAEC,KAAMnC,GAA1C,SACGF,GAASC,KAFLF,EADE,YAa1B,C","sources":["pages/Movies/Movie.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 0px;\n  padding-bottom: 20px;\n`;\n\nexport const SubmitForm = styled.form`\n  display: flex;\n  gap: 10px;\n  margin: 20px 0px;\n  padding-bottom: 20px;\n`;\n\nexport const Title = styled.div`\n  padding-bottom: 20px;\n  font-size: 24px;\n  font-weight: 800;\n`;\nexport const List = styled.ul`\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const AddInfo = styled.div`\n  padding-bottom: 20px;\n`;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TbSearch } from 'react-icons/tb';\nimport { fetchSearch } from 'Service/fetchApi';\nimport { Container, List, SubmitForm } from './Movie.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchName, setSearchName] = useState('');\n  const [recieveData, setRecieveData] = useState('');\n\n  const name = searchParams.get('name') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchName !== '') {\n      setSearchParams(searchName);\n    }\n  };\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchName(nextParams);\n  };\n\n  useEffect(() => {\n    fetchSearch(name)\n      .then(data => {\n        setRecieveData(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [name]);\n\n  const { results } = recieveData;\n  console.log(results);\n  return (\n    <Container>\n      <div>\n        <SubmitForm onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={e => updateQueryString(e.target.value)}\n          />\n          <button type=\"submit\">\n            <TbSearch />\n            <span>Search</span>\n          </button>\n        </SubmitForm>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <div>\n          {results && (\n            <List>\n              {results.map(({ id, title, name }) => (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {title || name}\n                  </Link>\n                </li>\n              ))}\n            </List>\n          )}\n        </div>\n      </Suspense>\n    </Container>\n  );\n};\n\nfetchSearch.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Movies;\n"],"names":["Container","styled","SubmitForm","List","fetchSearch","results","PropTypes","id","title","name","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","searchName","setSearchName","recieveData","setRecieveData","get","useEffect","then","data","catch","error","console","log","message","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","updateQueryString","target","value","Suspense","fallback","map","to","state","from"],"sourceRoot":""}