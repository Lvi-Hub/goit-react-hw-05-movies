{"version":3,"file":"static/js/779.3f075895.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,IAAH,wHAOTC,EAAWD,EAAAA,GAAAA,GAAH,4E,GAMFA,EAAAA,GAAAA,IAAH,2D,QCyBhB,EAlCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAiCE,EAAAA,EAAAA,UAAS,IAA1C,eAAOC,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GACVO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,EAAWI,EACZ,IACAG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAMC,QAAtB,GACf,GAAE,CAACb,IACJ,IAAQc,EAAYX,EAAZW,QACR,OACE,SAACjB,EAAD,WACE,SAACE,EAAD,iBACGe,QADH,IACGA,OADH,EACGA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADG,OASrB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 30px;\n  padding-bottom: 20px;\n  gap: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 100px;\n  height: 160px;\n`;\n","import { fetchReviews } from 'Service/fetchApi';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, ItemList } from './Reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [MovReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(data => {\n        console.log(data);\n        setReviews(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  const { results } = MovReviews;\n  return (\n    <Container>\n      <ItemList>\n        {results?.map(({ id, author, content }) => (\n          <li key={id}>\n            <h2>{author}</h2>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ItemList>\n    </Container>\n  );\n};\n\nReviews.propTypes = {\n  results: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string,\n  }),\n};\nexport default Reviews;\n"],"names":["Container","styled","ItemList","movieId","useParams","useState","MovReviews","setReviews","useEffect","fetchReviews","then","data","console","log","catch","error","message","results","map","id","author","content"],"sourceRoot":""}