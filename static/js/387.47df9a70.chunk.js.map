{"version":3,"file":"static/js/387.47df9a70.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,IAAH,wHAOTC,EAAWD,EAAAA,GAAAA,GAAH,4EAMRE,EAAMF,EAAAA,GAAAA,IAAH,2D,SC6BhB,EAtCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GACPO,MAAK,SAAAC,GAEJJ,EAAQI,EACT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACb,IACJ,IAAQc,EAASX,EAATW,KACR,OACE,SAAClB,EAAD,WACE,SAACE,EAAD,iBACGgB,QADH,IACGA,OADH,EACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACT,2BACE,SAACnB,EAAD,CACEoB,IAAG,yCAAoCD,GACvCE,IAAI,MAEN,uBAAIH,MALGD,EADA,OAYlB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 30px;\n  padding-bottom: 20px;\n  gap: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 100px;\n  height: 160px;\n`;\n","import { fetchCast } from 'Service/fetchApi';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Img, ItemList } from './Cast.styled';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [Cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(data => {\n        // console.log(data);\n        setCast(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  const { cast } = Cast;\n  return (\n    <Container>\n      <ItemList>\n        {cast?.map(({ id, name, profile_path }) => (\n          <li key={id}>\n            <Img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt=\"\"\n            />\n            <p>{name}</p>\n          </li>\n        ))}\n      </ItemList>\n    </Container>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }),\n};\n\nexport default Cast;\n"],"names":["Container","styled","ItemList","Img","movieId","useParams","useState","Cast","setCast","useEffect","fetchCast","then","data","catch","error","console","log","message","cast","map","id","name","profile_path","src","alt"],"sourceRoot":""}