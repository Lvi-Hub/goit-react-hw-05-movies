{"version":3,"file":"static/js/544.b30ab1b9.chunk.js","mappings":"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","sources":["Service/fetchApi.jsx","pages/MovieDetails/MovieDetails.styled.js","components/BackLink/backBtn.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3';\nconst api_key = '481cbb6dba5121edc01136f73aa6b3c6';\n//--\nexport function fetchTrending() {\n  const urlTrending = `${URL}/trending/all/day?api_key=${api_key}`;\n  return fetch(urlTrending).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\nexport function fetchMovieDetails(moviesID) {\n  const urlMoviesDetails = `${URL}/movie/${moviesID}?api_key=${api_key}`;\n  return fetch(urlMoviesDetails).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\n\nexport function fetchCast(moviesID) {\n  const urlCast = `${URL}/movie/${moviesID}/credits?api_key=${api_key}`;\n  return fetch(urlCast).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport function fetchReviews(moviesID) {\n  const URLReviews = `${URL}/movie/${moviesID}/reviews?api_key=${api_key}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/search/movie\nexport function fetchSearch(SearchName, setError) {\n  const URLReviews = `${URL}/search/movie?api_key=${api_key}&query=${SearchName}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return (\n      setError(true), Promise.reject(new Error('Can´t find tranding films'))\n    );\n  });\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 20px 30px;\n  padding-bottom: 20px;\n  gap: 30px;\n  border-bottom: 1px solid black;\n`;\nexport const Info = styled.div`\n  padding-bottom: 20px;\n`;\nexport const Img = styled.img`\n  width: 270px;\n  height: 360px;\n`;\n\nexport const AddInfo = styled.div`\n  padding-bottom: 20px;\n`;\n\nexport const ItemLink = styled(Link)`\n  padding-bottom: 20px;\n`;\n\nexport const Message = styled.div`\n  padding-top: 20px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 10px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: 1px solid #000;\n  background-color: #e3dddd;\n  border-radius: 3px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './backBtn.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"17\" />\n      {children}\n    </StyledLink>\n  );\n};\nexport default BackLink;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  Container,\n  Img,\n  Info,\n  AddInfo,\n  ItemLink,\n  Message,\n} from './MovieDetails.styled';\nimport BackLink from 'components/BackLink/BackLink';\nimport PropTypes from 'prop-types';\nimport { fetchMovieDetails } from 'Service/fetchApi';\n//--\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [moviesDatails, setMoviesDatails] = useState([]);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(data => {\n        // console.log(data);\n        setMoviesDatails(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  // console.log(moviesDatails);\n  const { title, poster_path, vote_average, overview, genres } = moviesDatails;\n  return (\n    <>\n      <BackLink to={backLinkHref.current}>Go Back</BackLink>\n      {!title && <Message> No datailes about this movies!!! </Message>}\n      {title && (\n        <>\n          <Container>\n            <Img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={`${title}`}\n            />\n\n            <Info>\n              <p>{title}</p>\n              <p>User score: {Math.round((vote_average * 100) / 10) || ''}%</p>\n              <p>Overview</p>\n              <p>{overview}</p>\n              <p>Genres</p>\n              <ul>\n                {genres?.map(({ id, name }) => (\n                  <li key={id}> {name}</li>\n                ))}\n              </ul>\n            </Info>\n          </Container>\n          <AddInfo>\n            <h2>Aditional information</h2>\n            <ul>\n              <li>\n                <ItemLink to=\"Cast\">Cast</ItemLink>\n              </li>\n              <li>\n                <ItemLink to=\"Reviews\">Reviews</ItemLink>\n              </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </AddInfo>\n        </>\n      )}\n    </>\n  );\n};\n\nMoviesDetails.propTypes = {\n  movieDetails: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string.isRequired,\n  }),\n\n  genres: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MoviesDetails;\n"],"names":["URL","api_key","fetchTrending","urlTrending","concat","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieDetails","moviesID","urlMoviesDetails","fetchCast","urlCast","fetchReviews","URLReviews","fetchSearch","SearchName","setError","Container","styled","_templateObject","_taggedTemplateLiteral","Info","_templateObject2","Img","_templateObject3","AddInfo","_templateObject4","ItemLink","Link","_templateObject5","Message","_templateObject6","StyledLink","_ref","to","children","_jsxs","_jsx","HiArrowLeft","size","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","moviesDatails","setMoviesDatails","location","useLocation","backLinkHref","useRef","state","from","useEffect","data","catch","error","console","log","message","title","poster_path","vote_average","overview","genres","_Fragment","BackLink","current","src","alt","Math","round","map","id","name","Suspense","fallback","Outlet"],"sourceRoot":""}