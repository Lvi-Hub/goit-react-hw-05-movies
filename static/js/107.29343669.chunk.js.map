{"version":3,"file":"static/js/107.29343669.chunk.js","mappings":"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","sources":["Service/fetchApi.jsx","pages/Movies/Movie.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3';\nconst api_key = '481cbb6dba5121edc01136f73aa6b3c6';\n//--\nexport function fetchTrending() {\n  const urlTrending = `${URL}/trending/all/day?api_key=${api_key}`;\n  return fetch(urlTrending).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\nexport function fetchMovieDetails(moviesID) {\n  const urlMoviesDetails = `${URL}/movie/${moviesID}?api_key=${api_key}`;\n  return fetch(urlMoviesDetails).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\n\nexport function fetchCast(moviesID) {\n  const urlCast = `${URL}/movie/${moviesID}/credits?api_key=${api_key}`;\n  return fetch(urlCast).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport function fetchReviews(moviesID) {\n  const URLReviews = `${URL}/movie/${moviesID}/reviews?api_key=${api_key}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/search/movie\nexport function fetchSearch(SearchName, setError) {\n  const URLReviews = `${URL}/search/movie?api_key=${api_key}&query=${SearchName}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return (\n      setError(true), Promise.reject(new Error('Can´t find tranding films'))\n    );\n  });\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 0px;\n  padding-bottom: 20px;\n`;\n\nexport const SubmitForm = styled.form`\n  display: flex;\n  gap: 10px;\n  margin: 20px 0px;\n  padding-bottom: 20px;\n`;\n\nexport const Title = styled.div`\n  padding-bottom: 20px;\n  font-size: 24px;\n  font-weight: 800;\n`;\nexport const List = styled.ul`\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const AddInfo = styled.div`\n  padding-bottom: 20px;\n`;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Link, Navigate, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TbSearch } from 'react-icons/tb';\nimport { fetchSearch } from 'Service/fetchApi';\nimport { Container, List, SubmitForm } from './Movie.styled';\n//--\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [recieveData, setRecieveData] = useState('');\n  const [error, setError] = useState(false);\n\n  const name = searchParams.get('name') ?? '';\n  const [searchName, setSearchName] = useState(name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name !== '') {\n      setSearchName(name);\n\n      console.log(searchName);\n    }\n  };\n\n  useEffect(() => {\n    if (searchName !== '') {\n      fetchSearch(searchName, setError)\n        .then(data => {\n          setRecieveData(data);\n        })\n        .catch(error => {\n          setError(true);\n          console.log(error.message);\n        });\n    }\n  }, [searchName]);\n\n  const { results } = recieveData;\n\n  return (\n    <Container>\n      {error && <Navigate to=\"/movies\" replace={true} />}\n      <div>\n        <SubmitForm onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={name}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={e => setSearchParams({ name: e.target.value })}\n          />\n          <button type=\"submit\">\n            <TbSearch />\n            <span>Search</span>\n          </button>\n        </SubmitForm>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <div>\n          {results && (\n            <List>\n              {results.map(({ id, title, name }) => (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {title || name}\n                  </Link>\n                </li>\n              ))}\n            </List>\n          )}\n        </div>\n      </Suspense>\n    </Container>\n  );\n};\n\nfetchSearch.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Movies;\n"],"names":["URL","api_key","fetchTrending","urlTrending","concat","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieDetails","moviesID","urlMoviesDetails","fetchCast","urlCast","fetchReviews","URLReviews","fetchSearch","SearchName","setError","Container","styled","_templateObject","_taggedTemplateLiteral","SubmitForm","_templateObject2","List","_templateObject3","_templateObject4","_templateObject5","results","PropTypes","id","title","name","_searchParams$get","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","recieveData","setRecieveData","_useState3","_useState4","error","get","_useState5","_useState6","searchName","setSearchName","useEffect","data","catch","console","log","message","_jsxs","children","_jsx","Navigate","to","replace","onSubmit","e","preventDefault","type","value","autoComplete","autoFocus","placeholder","onChange","target","TbSearch","Suspense","fallback","map","_ref","Link","state","from"],"sourceRoot":""}