{"version":3,"file":"static/js/779.e664303d.chunk.js","mappings":"sQAAA,IAAMA,EAAM,+BACNC,EAAU,mCAGT,SAASC,IACd,IAAMC,EAAW,UAAMH,EAAN,qCAAsCC,GACvD,OAAOG,MAAMD,GAAaE,MAAK,SAAAC,GAC7B,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,gCACjC,GACF,CAEM,SAASC,EAAkBC,GAChC,IAAMC,EAAgB,UAAMd,EAAN,kBAAmBa,EAAnB,oBAAuCZ,GAC7D,OAAOG,MAAMU,GAAkBT,MAAK,SAAAC,GAClC,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,gCACjC,GACF,CAGM,SAASI,EAAUF,GACxB,IAAMG,EAAO,UAAMhB,EAAN,kBAAmBa,EAAnB,4BAA+CZ,GAC5D,OAAOG,MAAMY,GAASX,MAAK,SAAAC,GACzB,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,gCACjC,GACF,CAGM,SAASM,EAAaJ,GAC3B,IAAMK,EAAU,UAAMlB,EAAN,kBAAmBa,EAAnB,4BAA+CZ,GAC/D,OAAOG,MAAMc,GAAYb,MAAK,SAAAC,GAC5B,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,gCACjC,GACF,CAGM,SAASQ,EAAYC,GAC1B,IAAMF,EAAU,UAAMlB,EAAN,iCAAkCC,EAAlC,kBAAmDmB,GACnE,OAAOhB,MAAMc,GAAYb,MAAK,SAAAC,GAC5B,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,gCACjC,GACF,C,mIC1DYU,EAAYC,EAAAA,GAAAA,IAAH,wHAOTC,EAAWD,EAAAA,GAAAA,GAAH,4E,GAMFA,EAAAA,GAAAA,IAAH,2D,QCyBhB,EAlCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAiCE,EAAAA,EAAAA,UAAS,IAA1C,eAAOC,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAaO,GACVnB,MAAK,SAAAyB,GACJC,QAAQC,IAAIF,GACZF,EAAWE,EACZ,IACAG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAMC,QAAtB,GACf,GAAE,CAACX,IACJ,IAAQY,EAAYT,EAAZS,QACR,OACE,SAACf,EAAD,WACE,SAACE,EAAD,iBACGa,QADH,IACGA,OADH,EACGA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADG,OASrB,C","sources":["Service/fetchApi.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3';\nconst api_key = '481cbb6dba5121edc01136f73aa6b3c6';\n\n//--\nexport function fetchTrending() {\n  const urlTrending = `${URL}/trending/all/day?api_key=${api_key}`;\n  return fetch(urlTrending).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\nexport function fetchMovieDetails(moviesID) {\n  const urlMoviesDetails = `${URL}/movie/${moviesID}?api_key=${api_key}`;\n  return fetch(urlMoviesDetails).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n//--\n\nexport function fetchCast(moviesID) {\n  const urlCast = `${URL}/movie/${moviesID}/credits?api_key=${api_key}`;\n  return fetch(urlCast).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport function fetchReviews(moviesID) {\n  const URLReviews = `${URL}/movie/${moviesID}/reviews?api_key=${api_key}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n\n//-- https://api.themoviedb.org/3/search/movie\nexport function fetchSearch(SearchName) {\n  const URLReviews = `${URL}/search/movie?api_key=${api_key}&query=${SearchName}`;\n  return fetch(URLReviews).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Can´t find tranding films'));\n  });\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 30px;\n  padding-bottom: 20px;\n  gap: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 100px;\n  height: 160px;\n`;\n","import { fetchReviews } from 'Service/fetchApi';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, ItemList } from './Reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [MovReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(data => {\n        console.log(data);\n        setReviews(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  const { results } = MovReviews;\n  return (\n    <Container>\n      <ItemList>\n        {results?.map(({ id, author, content }) => (\n          <li key={id}>\n            <h2>{author}</h2>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ItemList>\n    </Container>\n  );\n};\n\nReviews.propTypes = {\n  results: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string,\n  }),\n};\nexport default Reviews;\n"],"names":["URL","api_key","fetchTrending","urlTrending","fetch","then","res","ok","json","Promise","reject","Error","fetchMovieDetails","moviesID","urlMoviesDetails","fetchCast","urlCast","fetchReviews","URLReviews","fetchSearch","SearchName","Container","styled","ItemList","movieId","useParams","useState","MovReviews","setReviews","useEffect","data","console","log","catch","error","message","results","map","id","author","content"],"sourceRoot":""}